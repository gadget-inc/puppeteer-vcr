{
  "outcomes": {
    "45761906": [
      null,
      {
        "type": "response",
        "key": {
          "method": "GET",
          "body": null,
          "isNavigationRequest": false,
          "resourceType": "script",
          "url": {
            "protocol": "https:",
            "username": "",
            "password": "",
            "hostname": "cdn.shopify.com",
            "port": "",
            "pathname": "/s/files/1/0987/6688/t/72/assets/algolia_instant_search.js",
            "query": {
              "7608": ""
            }
          },
          "keyCount": 1,
          "keyHash": "45761906",
          "extra": {}
        },
        "duration": 161,
        "response": {
          "setCookies": [],
          "cacheConfig": {
            "dateDelta": -784,
            "expiresDelta": 31535947216,
            "lastModifiedDelta": -2571763784
          },
          "status": 200,
          "body": {
            "encoding": "utf-8",
            "content": "(function (algolia, instantsearch) {\n\n  var collectionFacetConstraint = !!algolia.is_collection_results_page &&\n    !!algolia.config.instant_search_enabled_on_collection;\n\n\n  if (\n      (!algolia.full_results && !collectionFacetConstraint) || !algolia.config.instant_search_enabled\n    ) {\n    return;\n  }\n\n  var _ = algolia._,\n      $ = algolia.jQuery;\n\n  var collectionFacetValue = null;\n  if (collectionFacetConstraint) {\n    var matches = window.location.pathname.match(/\\/collections\\/([^/]+)/i);\n    if (!!matches && matches.length === 2) {\n      collectionFacetValue = matches[1];\n    }\n  }\n\n  algolia.config.results_selector += ', .algolia-shopify-instantsearch';\n\n  var $hiding = $('<style>' + algolia.config.results_selector + ' { visibility: hidden }</style>');\n  $hiding.appendTo($('head'));\n\n  var instant = algolia.instantsearch = {\n    colors: algolia.config.colors,\n    distinct: !!algolia.config.show_products,\n    facets: {\n      hidden: algolia.hiddenFacets,\n      shown: algolia.shownFacets,\n      list: algolia.facets,\n      widgets: algolia.facetsWidgets\n    },\n    hitsPerPage: algolia.config.products_full_results_hits_per_page,\n    poweredBy: algolia.config.powered_by,\n    search: instantsearch({\n      appId: algolia.config.app_id,\n      apiKey: algolia.config.search_api_key,\n      indexName: '' + algolia.config.index_prefix + 'products',\n      searchParameters: {\n       clickAnalytics: true\n      },\n      urlSync: {},\n      searchFunction: function (searchFunctionHelper) {\n        // Set query parameters here because they're not kept when someone\n        // presses the Back button if set in the `init` function of a custom widget\n        var helper = instant.search.helper;\n        var page = helper.getPage();\n        helper.setQueryParameter('highlightPreTag', '<span class=\"ais-highlight\">');\n        helper.setQueryParameter('highlightPostTag', '</span>');\n        if (instant.distinct) {\n          helper.setQueryParameter('distinct', true);\n        }\n        if (!!collectionFacetConstraint && !!collectionFacetValue) {\n          helper.setQueryParameter('filters', 'collections:\"' + collectionFacetValue + '\"');\n        }\n        helper.setPage(page);\n        searchFunctionHelper.search();\n      }\n    }),\n    selector: algolia.config.results_selector + ', .algolia-shopify-instantsearch',\n    sortOrders: algolia.sortOrders,\n    storeName: algolia.storeName,\n    templates: {\n      currentItem: algolia.getTemplate('instant_search_current_refined_values_item'),\n      empty: algolia.getTemplate('instant_search_no_result'),\n      page: algolia.compileTemplate('instant_search'),\n      product: algolia.getTemplate('instant_search_product'),\n      stats: algolia.getTemplate('instant_search_stats'),\n      style: algolia.compileTemplate('instant_search.css')\n    }\n  };\n\n  if (instant.poweredBy) {\n    console.log('Algolia: Instant-Search');\n  }\n\n  function readjust() {\n    var width = instant.$results.outerWidth();\n\n    var suffix = 'lg';\n    if (width < 400) suffix = 'xs';\n    else if (width < 800) suffix = 'sm';\n    else if (width < 1200) suffix = 'md';\n\n    instant.$results\n      .removeClass('ais-results-size-xs')\n      .removeClass('ais-results-size-sm')\n      .removeClass('ais-results-size-md')\n      .removeClass('ais-results-size-lg')\n      .addClass('ais-results-size-' + suffix);\n  }\n\n  // Bind helpers\n  _.forEach(Object.assign({}, algolia.helpers, algolia.translation_helpers), function (helper, name) {\n    instant.search.templatesConfig.helpers[name] = helper;\n  });\n  instant.search.templatesConfig.compileOptions = algolia.hoganOptions;\n\n  algolia.appendStyle(algolia.render(instant.templates.style, {\n    distinct: instant.distinct,\n    colors: instant.colors\n  }));\n\n  $(document).ready(function () {\n    instant.$results = $(instant.selector);\n\n    instant.$results.html(algolia.render(instant.templates.page, {\n      facets: instant.facets.list,\n      storeName: instant.storeName,\n      translations: algolia.translations\n    }));\n\n    readjust();\n\n    $(window).resize(function () {\n      readjust();\n    });\n\n    // Mobile facets display\n    instant.search.addWidget({\n      init: function (opts) {\n        var $button = $('.ais-facets-button');\n        $button.on('click', function () {\n          var $facets = $('.ais-facets');\n\n          if ($facets.hasClass('ais-facets__shown')) {\n            $button.text('Show filters');\n            $facets.removeClass('ais-facets__shown');\n          } else {\n            $button.text('Hide filters');\n            $facets.addClass('ais-facets__shown');\n          }\n        });\n      }\n    });\n\n    // Search input\n    instant.search.addWidget(\n      instantsearch.widgets.searchBox({\n        container: '.ais-search-box-container',\n        placeholder: algolia.translations.searchForProduct,\n        poweredBy: false\n      })\n    );\n\n    // Logo & clear\n    instant.search.addWidget({\n      init: function (opts) {\n        if (!instant.poweredBy) {\n          $('.ais-algolia-icon').hide();\n        }\n        $('.ais-clear-input-icon').on('click', function () {\n          opts.helper.setQuery('').search();\n          $('.ais-search-box--input').val('').focus();\n        });\n      },\n      render: function (opts) {\n        if (!opts.state.query) {\n          if (instant.poweredBy) {\n            $('.ais-algolia-icon').show();\n          }\n          $('.ais-clear-input-icon').hide();\n        } else {\n          $('.ais-clear-input-icon').show();\n          $('.ais-algolia-icon').hide();\n        }\n      }\n    });\n\n    // Stats\n    instant.search.addWidget(\n      instantsearch.widgets.stats({\n        container: '.ais-stats-container',\n        templates: {\n          body: instant.templates.stats,\n        },\n        transformData: {\n          body: function (data) {\n            data.processingTimeS = data.processingTimeMS / 1000;\n            data.start = data.page * data.hitsPerPage + 1;\n            data.end = Math.min((data.page + 1) * data.hitsPerPage, data.nbHits);\n            data.translations = algolia.translations;\n            return data;\n          }\n        }\n      })\n    );\n\n    // Sort orders\n    instant.search.addWidget(\n      instantsearch.widgets.sortBySelector({\n        container: '.ais-sort-orders-container',\n        indices: instant.sortOrders\n      })\n    );\n\n    // Change display\n    instant.search.addWidget({\n      init: function (opts) {\n        $('.ais-search-header').on('click', '.ais-change-display-block', function () {\n          $('.ais-change-display-block:not(.ais-change-display-selected)').addClass('ais-change-display-selected');\n          $('.ais-change-display-list.ais-change-display-selected').removeClass('ais-change-display-selected');\n          $('.ais-results-as-list').removeClass('ais-results-as-list').addClass('ais-results-as-block');\n        });\n        $('.ais-search-header').on('click', '.ais-change-display-list', function () {\n          $('.ais-change-display-list:not(.ais-change-display-selected)').addClass('ais-change-display-selected');\n          $('.ais-change-display-block.ais-change-display-selected').removeClass('ais-change-display-selected');\n          $('.ais-results-as-block').removeClass('ais-results-as-block').addClass('ais-results-as-list');\n        });\n      }\n    });\n\n    // Hidden facets\n    var list = _.map(instant.facets.hidden, function (facet) { return facet.name; });\n    instant.search.addWidget({\n      getConfiguration: function () {\n        return {\n          facets: list,\n          disjunctiveFacets: list\n        };\n      },\n      init: function () {}\n    });\n\n    // Current refined values\n    var attributes = _.map(instant.facets.shown, function (facet) {\n      return {\n        name: facet.name,\n        label: facet.title\n      }\n    });\n    instant.search.addWidget(\n      instantsearch.widgets.currentRefinedValues({\n        container: '.ais-current-refined-values-container',\n        cssClasses: {\n          root: 'ais-facet',\n          header: 'ais-facet--header',\n          body: 'ais-facet--body'\n        },\n        templates: {\n          header: algolia.translations.selectedFilter,\n          item: instant.templates.currentItem,\n          clearAll: algolia.translations.clearAll\n        },\n        onlyListedAttributes: true,\n        attributes: attributes\n      })\n    );\n\n    // Facets\n    _.forEach(instant.facets.widgets, function (widget) {\n      instant.search.addWidget(instantsearch.widgets[widget.name](widget.params));\n    });\n\n    // Hits\n    instant.search.addWidget(\n      instantsearch.widgets.hits({\n        container: '.ais-hits-container',\n        hitsPerPage: instant.hitsPerPage,\n        templates: {\n          empty: instant.templates.empty,\n          item: instant.templates.product\n        },\n        transformData: {\n          item: function (product) {\n            product._distinct = instant.distinct;\n            product.can_order = (\n              product.inventory_management !== 'shopify' ||\n              product.inventory_policy === 'continue' ||\n              product.inventory_quantity > 0\n            );\n            product.translations = algolia.translations;\n            product.queryID = instant.search.helper.lastResults._rawResults[0].queryID;\n            product.productPosition = product.__hitIndex + 1;\n            return product;\n          },\n          empty: function (params) {\n            params.translations = algolia.translations;\n            return params;\n          }\n        }\n      })\n    );\n\n    // Redirect to product on click\n    instant.search.addWidget({\n      init: function (opts) {\n        $('.ais-hits-container').on('click', '.ais-hit', function (e) {\n          var $this = $(this),\n              handle = $this.attr('data-handle'),\n              variant_id = $this.attr('data-variant-id')\n              distinct = $this.attr('data-distinct');\n\n          var link = '/products/' + handle;\n          if (distinct !== 'true') {\n            link += '?variant=' + variant_id;\n          }\n          if (algolia.config.analytics_enabled) {\n            algolia.clickTracker(e);\n          }\n          window.location.href = link;\n        });\n        $('.ais-hits-container').on('click', '.ais-hit a', function (e) {\n          e.stopPropagation();\n          if (algolia.config.analytics_enabled) {\n            algolia.clickTracker(e);\n          }\n        });\n      }\n    });\n\n    // Add to cart\n    instant.search.addWidget({\n      init: function (opts) {\n        $('.ais-hits-container').on('click', '.ais-hit--cart-button', function (e) {\n          e.stopPropagation();\n          var $this = $(this),\n              formId = $this.attr('data-form-id');\n\n          if (formId) {\n            document.getElementById(formId).submit();\n          }\n        });\n      }\n    });\n\n    // No result actions\n    instant.search.addWidget({\n      init: function (opts) {\n        $('.ais-hits-container').on('click', '.ais-hit-empty--clear-filters', function () {\n          var helper = opts.helper;\n          helper.clearTags();\n          _.forEach(instant.facets.list, function (facet) {\n            helper.clearRefinements(facet.name);\n          });\n          helper.search();\n        });\n\n        $('.ais-hits-container').on('click', '.ais-hit-empty--clear-input', function () {\n          opts.helper.setQuery('').search();\n          $('.ais-search-box--input').val('').focus();\n        });\n      }\n    });\n\n    // Pagination\n    instant.search.addWidget(\n      instantsearch.widgets.pagination({\n        container: '.ais-pagination-container',\n        padding: 2,\n        maxPages: 20\n      })\n    );\n\n    // Main\n    instant.search.start();\n\n    $hiding.remove();\n  });\n}(algoliaShopify, instantsearch));\n"
          },
          "headers": {
            "x-url": "/s/files/1/0987/6688/t/72/assets/algolia_instant_search.js?7608",
            "strict-transport-security": "max-age=63072000; includeSubDomains; preload",
            "x-content-type-options": "nosniff",
            "x-cdn": "Fastly, http2",
            "x-dc": "gke",
            "edge-cache-tag": "cdn-shopify-com-s-files-1-0987-6688-t-72-assets-algolia_instant_search-js",
            "status": "200",
            "x-cache": "HIT, MISS",
            "x-xss-protection": "1; mode=block",
            "x-request-id": "edd191ce5c414bc3e3b50a283d526b125ba803f01c35aaef1ae704f4220ff435",
            "x-served-by": "cache-jfk8134-JFK, cache-yyz4542-YYZ",
            "server": "cache-yyz4542-YYZ",
            "x-timer": "S1581090007.735865,VS0,VE12",
            "vary": "Accept-Encoding",
            "content-type": "application/javascript",
            "access-control-allow-origin": "*",
            "cache-control": "public, max-age=31557600",
            "accept-ranges": "bytes",
            "timing-allow-origin": "*",
            "link": "<https://cdn.shopify.com/s/files/1/0987/6688/t/72/assets/algolia_instant_search.js>; rel=\"canonical\"",
            "x-cache-hits": "1, 0"
          }
        }
      }
    ]
  },
  "version": 1
}