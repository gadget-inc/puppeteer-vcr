{
  "outcomes": {
    "3498320412": [
      null,
      {
        "type": "response",
        "key": {
          "method": "GET",
          "body": null,
          "isNavigationRequest": false,
          "resourceType": "script",
          "url": {
            "protocol": "https:",
            "username": "",
            "password": "",
            "hostname": "cdn.shopify.com",
            "port": "",
            "pathname": "/s/files/1/0987/6688/t/72/assets/algolia_facets.js",
            "query": {
              "7608": ""
            }
          },
          "keyCount": 1,
          "keyHash": "3498320412",
          "extra": {}
        },
        "duration": 157,
        "response": {
          "setCookies": [],
          "cacheConfig": {
            "dateDelta": -780,
            "expiresDelta": 31535947220,
            "lastModifiedDelta": -2571763780
          },
          "status": 200,
          "body": {
            "encoding": "utf-8",
            "content": "(function (algolia) {\n  'use strict';\n\n  var _ = algolia._;\n\n  var TYPES_TO_WIDGET = {\n    slider: { name: 'rangeSlider', useDefault: true },\n    menu: { name: 'menu', params: { limit: 10 } },\n    conjunctive: { name: 'refinementList', params: { operator: 'and', limit: 10 } },\n    disjunctive: { name: 'refinementList', params: { operator: 'or', limit: 10 } },\n  };\n\n  var sortByRefined = function sortByRefined (sortFunction) {\n    return function (a, b) {\n      if (a.refined !== b.refined) {\n        if (a.refined) {\n          return -1;\n        }\n        if (b.refined) {\n          return 1;\n        }\n      }\n      return sortFunction(a, b);\n    };\n  };\n\n  /*\n   * Sorting functions : Allows to chose in which order you want to display the facets\n   * Algolia will always send you back the most relevant values for each facet (the ones\n   * with the highest count). These sorting functions won't change which results come back\n   * but how they are displayed. To retrieve more results, change the maxValuesPerFacet\n   * parameter in your Algolia Dashboard.\n   * The default sort function is refined > count > name.\n   */\n  algolia.facetSortFunctions = {\n    price_range: sortByRefined(function sortRanges (a, b) {\n      if (a.name.length === b.name.length) {\n        return a.name.localeCompare(b.name);\n      }\n      return a.name.length - b.name.length;\n    })\n  };\n\n  /*\n   * Display functions\n   * When the object sent back for a facet item doesn't match how you would want it to look\n   * like, use a function to reformat it how you want.\n   */\n  algolia.facetDisplayFunctions = {\n    price_range: function displayRange (value) {\n      var values = value.split(':');\n\n      return _.map(values, function (e) {\n        return algolia.formatMoney(+e * 100).replace(/\\.\\d+/, '');\n      }).join(' - ');\n    }\n  }\n\n  algolia.facetCssClasses = {\n    root: 'ais-facet',\n    header: 'ais-facet--header',\n    body: 'ais-facet--body',\n    item: 'ais-facet--item',\n    label: 'ais-facet--label',\n    checkbox: 'ais-facet--checkbox',\n    active: 'ais-facet--active',\n    count: 'ais-facet--count'\n  };\n\n  var enabledFacets = _.filter(algolia.config.facets, function (facet) { return facet.enabled || parseInt(facet.enabled); });\n  algolia.facets = _.map(enabledFacets, function (facet) { return Object.assign({}, facet, { escapedName: encodeURIComponent(facet.name) }) });\n  algolia.shownFacets = _.filter(algolia.facets, function (facet) { return facet.type !== 'hidden' });\n  algolia.hiddenFacets = _.filter(algolia.config.facets, function (facet) { return facet.type === 'hidden'; });\n  algolia.facetTitles = {};\n  _.each(algolia.facets, function (facet) {\n    algolia.facetTitles[facet.name] = facet.title;\n  });\n  algolia.facetsWidgets = _.map(algolia.shownFacets, function (facet) {\n    var widget = TYPES_TO_WIDGET[facet.type],\n        params = _.cloneDeep(widget.params) || {};\n\n    params.container = \"[class~='ais-facet-\" + facet.escapedName + \"']\";\n    params.attributeName = facet.name;\n    params.templates = {};\n    params.cssClasses = algolia.facetCssClasses;\n\n    if (facet.searchable) {\n      params.searchForFacetValues = {placeholder: 'Search for ' + facet.name, isAlwaysActive: true};\n      params.searchForFacetValues.templates = {noResults: '<div> No matching ' + facet.name + '</div>'};\n    }\n\n    params.templates.header = function () {\n      return facet.title;\n    }\n\n    if (!widget.useDefault) {\n      params.templates.item = algolia.getTemplate('instant_search_facet_item');\n    }\n\n    if (algolia.facetSortFunctions[facet.name]) {\n      params.sortBy = algolia.facetSortFunctions[facet.name];\n    }\n\n    var displayFunction = algolia.facetDisplayFunctions[facet.name];\n    params.transformData = function (data) {\n      data.type = {};\n      data.type[facet.type] = true;\n      if (displayFunction) {\n        data.name = displayFunction(data.name);\n      }\n      return data;\n    }\n\n    return {\n      name: widget.name,\n      params: params\n    };\n  });\n}(algoliaShopify));\n"
          },
          "headers": {
            "x-url": "/s/files/1/0987/6688/t/72/assets/algolia_facets.js?7608",
            "strict-transport-security": "max-age=63072000; includeSubDomains; preload",
            "x-content-type-options": "nosniff",
            "x-cdn": "Fastly, http2",
            "x-dc": "gke",
            "edge-cache-tag": "cdn-shopify-com-s-files-1-0987-6688-t-72-assets-algolia_facets-js",
            "status": "200",
            "x-cache": "HIT, MISS",
            "x-xss-protection": "1; mode=block",
            "x-request-id": "9e8684a04c65b3b6114e0b2e7f36f0dd21fb94aa5d51ce6979785a677f64df28",
            "x-served-by": "cache-jfk8140-JFK, cache-yyz4542-YYZ",
            "server": "cache-yyz4542-YYZ",
            "x-timer": "S1581090007.735803,VS0,VE12",
            "vary": "Accept-Encoding",
            "content-type": "application/javascript",
            "access-control-allow-origin": "*",
            "cache-control": "public, max-age=31557600",
            "accept-ranges": "bytes",
            "timing-allow-origin": "*",
            "link": "<https://cdn.shopify.com/s/files/1/0987/6688/t/72/assets/algolia_facets.js>; rel=\"canonical\"",
            "x-cache-hits": "1, 0"
          }
        }
      }
    ]
  },
  "version": 1
}