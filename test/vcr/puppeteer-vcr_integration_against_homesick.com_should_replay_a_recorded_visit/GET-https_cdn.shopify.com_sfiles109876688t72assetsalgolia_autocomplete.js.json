{
  "outcomes": {
    "2441605249": [
      null,
      {
        "type": "response",
        "key": {
          "method": "GET",
          "body": null,
          "isNavigationRequest": false,
          "resourceType": "script",
          "url": {
            "protocol": "https:",
            "username": "",
            "password": "",
            "hostname": "cdn.shopify.com",
            "port": "",
            "pathname": "/s/files/1/0987/6688/t/72/assets/algolia_autocomplete.js",
            "query": {
              "7608": ""
            }
          },
          "keyCount": 1,
          "keyHash": "2441605249",
          "extra": {}
        },
        "duration": 155,
        "response": {
          "setCookies": [],
          "cacheConfig": {
            "dateDelta": -778,
            "expiresDelta": 31535947222,
            "lastModifiedDelta": -2571763778
          },
          "status": 200,
          "body": {
            "encoding": "utf-8",
            "content": "(function (algolia) {\n  if (!algolia.config.autocomplete_enabled) return;\n\n  var _ = algolia._,\n      $ = algolia.jQuery;\n\n  var autocomplete;\n\n  function index (name) {\n    return algolia.client.initIndex('' + algolia.config.index_prefix + name);\n  }\n\n  function addPositionToHits(hits, queryID) {\n    return hits.map(function (entry, index) {\n      entry._position = index + 1;\n      entry._queryID = queryID\n      return entry\n    })\n  }\n\n  function autocompleteSection (section) {\n    var params = autocomplete[section];\n    if (params.enabled !== true) return null;\n\n    var templates = {\n      empty: function displayEmptyResultSet (props) {\n        return algolia.render(params.templates.empty, Object.assign({}, props, { translations: algolia.translations }));\n      },\n      suggestion: function displaySuggestion (hit) {\n        return algolia.render(params.templates.hit, Object.assign({ _distinct: params.distinct }, hit, {translations: algolia.translations}));\n      }\n    };\n\n    if (params.templates.footer) {\n      templates.footer = function displayFooter (props, content) {\n        if (content.nbHits <= params.hitsPerPage) return null;\n        if (!autocomplete.showFooter) return null;\n\n        return algolia.render(params.templates.footer, {\n          query: props.query,\n          nbHits: content.nbHits,\n          translations: algolia.translations,\n          helpers: algolia.helpers\n        });\n      }\n\n    }\n\n    return {\n      name: section,\n      source: function(query, callback) {\n        var searchOpts = {\n          clickAnalytics: true,\n          hitsPerPage: params.hitsPerPage,\n          highlightPreTag: '<span class=\"aa-highlight\">',\n          highlightPostTag: '</span>',\n        };\n        if (params.distinct) {\n          searchOpts.distinct = true;\n        }\n        index(section).search(query, searchOpts).then(function(answer) {\n          var hits = addPositionToHits(answer.hits, answer.queryID);\n          callback(hits, answer);\n        });\n      },\n      displayKey: 'title',\n      templates: templates\n    }\n  };\n\n  function readjust($this) {\n    var data = $this.data('aaAutocomplete');\n    if (!data) return;\n    var $node = data.$node;\n    var $dropdown = data.dropdown.$menu;\n\n    var width = $this.outerWidth();\n    var vpWidth = document.body.clientWidth;\n    var offset = $this.offset();\n    var left = offset.left;\n    var right = vpWidth - width - left;\n    var top = offset.top;\n    var height = $this.outerHeight();\n\n    var align = left < right ? 'left' : 'right';\n    var dist = Math.min(left, right);\n\n    // For small centered inputs, take half the screen\n    if (4 * dist > vpWidth) {\n      align = 'left';\n      dist = Math.round(vpWidth / 4);\n    }\n\n    var newWidth = vpWidth - 2 * dist;\n\n    // For big inputs, follow the input\n    if (width >= 600) {\n      align = 'left';\n      dist = left;\n      newWidth = width;\n    }\n\n    $node\n      .css('left', '')\n      .css('right', '')\n      .css('top', (top + height + 8) + 'px')\n      .css(align, dist)\n      .css('width', '' + newWidth + 'px');\n\n    var suffix = 'lg';\n    if (newWidth < 300) suffix = 'xs';\n    else if (newWidth < 600) suffix = 'sm';\n    else if (newWidth < 900) suffix = 'md';\n\n    $dropdown\n      .removeClass('aa-dropdown-menu-size-xs')\n      .removeClass('aa-dropdown-menu-size-sm')\n      .removeClass('aa-dropdown-menu-size-md')\n      .removeClass('aa-dropdown-menu-size-lg')\n      .addClass('aa-dropdown-menu-size-' + suffix);\n  }\n\n  autocomplete = algolia.autocomplete = {\n    articles: {\n      enabled: algolia.config.index_articles,\n      hitsPerPage: algolia.config.articles_autocomplete_hits_per_page,\n      index: index('articles'),\n      templates: {\n        empty: algolia.compileTemplate('autocomplete_articles_empty'),\n        hit: algolia.compileTemplate('autocomplete_article')\n      }\n    },\n    pages: {\n      enabled: algolia.config.index_pages,\n      hitsPerPage: algolia.config.pages_autocomplete_hits_per_page,\n      index: index('pages'),\n      templates: {\n        empty: algolia.compileTemplate('autocomplete_pages_empty'),\n        hit: algolia.compileTemplate('autocomplete_page')\n      }\n    },\n    collections: {\n      enabled: algolia.config.index_collections,\n      hitsPerPage: algolia.config.collections_autocomplete_hits_per_page,\n      index: index('collections'),\n      templates: {\n        empty: algolia.compileTemplate('autocomplete_collections_empty'),\n        hit: algolia.compileTemplate('autocomplete_collection')\n      }\n    },\n    colors: algolia.config.colors,\n    debug: algolia.config.autocomplete_debug,\n    poweredBy: algolia.config.powered_by,\n    products: {\n      enabled: algolia.config.index_products,\n      distinct: algolia.config.show_products,\n      hitsPerPage: algolia.config.products_autocomplete_hits_per_page,\n      index: index('products'),\n      templates: {\n        empty: algolia.compileTemplate('autocomplete_products_empty'),\n        footer: algolia.compileTemplate('autocomplete_footer'),\n        hit: algolia.compileTemplate('autocomplete_product')\n      },\n    },\n    selector: algolia.config.input_selector + ', .algolia-shopify-autocomplete',\n    showFooter: algolia.config.instant_search_enabled,\n    storeName: algolia.storeName,\n    templates: {\n      dropdown: algolia.compileTemplate('autocomplete'),\n      empty: '<div></div>',\n      style: algolia.compileTemplate('autocomplete.css')\n    }\n  };\n\n  if (autocomplete.poweredBy) {\n    console.log('Algolia: Autocomplete');\n  }\n\n  algolia.appendStyle(algolia.render(autocomplete.templates.style, {\n    colors: autocomplete.colors\n  }));\n\n  $(document).ready(function mainAutocomplete () {\n    autocomplete.$input = $(autocomplete.selector);\n    autocomplete.$input.autocomplete({\n      debug: autocomplete.debug,\n      hint: false,\n      appendTo: 'body',\n      templates: {\n        dropdownMenu: algolia.render(autocomplete.templates.dropdown, {\n          storeName: autocomplete.storeName,\n          with: {\n            articles: autocomplete.articles.enabled,\n            collections: autocomplete.collections.enabled,\n            pages: autocomplete.pages.enabled,\n            footer: autocomplete.showFooter,\n            poweredBy: autocomplete.poweredBy,\n            products: autocomplete.products.enabled\n          }\n        }),\n        empty: autocomplete.templates.empty\n      }\n    }, _.compact([\n      autocompleteSection('collections'),\n      autocompleteSection('articles'),\n      autocompleteSection('pages'),\n      autocompleteSection('products')\n    ]));\n\n    // Hack to handle buggy onclick event on iOS\n    autocomplete.$input.each(function () {\n      var data = $(this).data('aaAutocomplete');\n      var dropdown = data.dropdown;\n      var suggestionClass = '.' + dropdown.cssClasses.prefix + '-' + dropdown.cssClasses.suggestion;\n      var onSuggestionClick = dropdown._onSuggestionClick.bind(dropdown);\n\n      var touchmoved;\n      dropdown.$menu.on('touchend', suggestionClass, function (e) {\n        if(touchmoved === false) {\n          e.preventDefault();\n          e.stopPropagation();\n          onSuggestionClick.apply(this, arguments);\n        }\n      }).on('touchmove', function (){\n        touchmoved = true;\n      }).on('touchstart', function(){\n        touchmoved = false;\n      });\n    });\n\n    autocomplete.$input.on('autocomplete:selected', function (obj, datum, name) {\n      if (algolia.config.analytics_enabled) {\n        window.aa('click', { objectID: datum.objectID, position: datum._position, queryID: datum._queryID });\n      }\n      if (name === 'products') {\n        var addVariantId = !autocomplete.products.distinct && datum.objectID !== datum.id;\n        window.location.href = '/' + name + '/' + datum.handle + (addVariantId ? ('?variant=' + datum.objectID) : '');\n      } else if (name === 'articles') {\n        window.location.href = '/blogs/' + datum.blog.handle + '/' + datum.handle;\n      } else {\n        window.location.href = '/' + name + '/' + datum.handle;\n      }\n    })\n\n    autocomplete.$input.on('autocomplete:redrawn', function () {\n      readjust($(this));\n    });\n\n    $(window).resize(function () {\n      autocomplete.$input.each(function () {\n        readjust($(this));\n      });\n    });\n  });\n}(algoliaShopify));\n"
          },
          "headers": {
            "x-url": "/s/files/1/0987/6688/t/72/assets/algolia_autocomplete.js?7608",
            "strict-transport-security": "max-age=63072000; includeSubDomains; preload",
            "x-content-type-options": "nosniff",
            "x-cdn": "Fastly, http2",
            "x-dc": "gke",
            "edge-cache-tag": "cdn-shopify-com-s-files-1-0987-6688-t-72-assets-algolia_autocomplete-js",
            "status": "200",
            "x-cache": "HIT, MISS",
            "x-xss-protection": "1; mode=block",
            "x-request-id": "a5045ebf9de9bdd154a73375b16ad4c5440c77e66370b002eb3b54a415ec6a33",
            "x-served-by": "cache-jfk8124-JFK, cache-yyz4542-YYZ",
            "server": "cache-yyz4542-YYZ",
            "x-timer": "S1581090007.735807,VS0,VE12",
            "vary": "Accept-Encoding",
            "content-type": "application/javascript",
            "access-control-allow-origin": "*",
            "cache-control": "public, max-age=31557600",
            "accept-ranges": "bytes",
            "timing-allow-origin": "*",
            "link": "<https://cdn.shopify.com/s/files/1/0987/6688/t/72/assets/algolia_autocomplete.js>; rel=\"canonical\"",
            "x-cache-hits": "1, 0"
          }
        }
      }
    ]
  },
  "version": 1
}